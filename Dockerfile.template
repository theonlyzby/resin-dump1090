# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# and about resin base images here: http://docs.resin.io/runtime/resin-base-images/
# Note the node:slim image doesn't have node-gyp
# FROM resin/%%RESIN_MACHINE_NAME%%-raspbian:latest
FROM resin/rpi-raspbian:stretch
# FROM resin/raspberrypi3-debian:stretch

# use apt-get if you need to install dependencies,
# Error on: pi-bluetooth raspberrypi-sys-mods raspi-config rpi-update
RUN apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y
RUN apt-get install -y git-core git cmake make libusb-1.0-0-dev build-essential nano

#  Clean-up apt-get
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Defines our working directory in container
WORKDIR /srv

# Install RTL-SDR Driver
RUN cd /srv \
    && git clone git://git.osmocom.org/rtl-sdr.git \
    && cd rtl-sdr \
    && mkdir build \
    && cd build \
    && cmake ../ -DINSTALL_UDEV_RULES=ON \
    && make \
    && make install \
    && ldconfig \
    && cd .. \
    && cp ./rtl-sdr/rtl-sdr.rules /etc/udev/rules.d/

# Install dump1090
RUN cd /srv \
    && git clone git://github.com/MalcolmRobb/dump1090.git \
    && cd dump1090 \
    && make \
    && cd .. \
    && printf 'blacklist dvb_usb_rtl28xxu\nblacklist rtl2832\nblacklist rtl2830\n' > nortl.conf \
    && cp ./nortl.conf /etc/modprobe.d/notrl.conf

# This will copy all files from our root to the working  directory in the container
COPY /opt/start.sh /opt/start.sh

# Starts up the Docker on the device
CMD [ "bash" , "/opt/start.sh"]
